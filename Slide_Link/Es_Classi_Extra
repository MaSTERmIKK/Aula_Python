ðŸ”µ Esercizio 1: Registro Studenti
Crea due classi: Studente e Registro.

Classe Studente:
Attributi: nome, cognome, voti (lista)

Metodi:

aggiungi_voto(voto)

media() â†’ restituisce la media dei voti

Classe Registro:
Attributo: studenti (lista di oggetti Studente)

Metodi:

aggiungi_studente(studente)

media_classe() â†’ calcola la media complessiva di tutti gli studenti

migliore_studente() â†’ ritorna il nome dello studente con media piÃ¹ alta

Obiettivo: usare piÃ¹ classi che interagiscono, operare su liste di oggetti.

ðŸ”µ Esercizio 2: Sistema di gestione prodotti
Crea una classe Prodotto e una classe Magazzino.

Classe Prodotto:
Attributi: nome, prezzo, quantitÃ 

Classe Magazzino:
Attributo: prodotti (lista di oggetti Prodotto)

Metodi:

aggiungi_prodotto(prodotto)

valore_totale() â†’ calcola il valore totale del magazzino (somma di prezzo Ã— quantitÃ )

cerca_prodotto(nome) â†’ ritorna il prodotto se esiste, altrimenti un messaggio di errore

Obiettivo: esercitarsi con gestione di liste, ricerca, moltiplicazioni e strutture condizionali.

ðŸ”µ Esercizio 3: Gestione Playlist Musicale
Crea una classe Brano e una classe Playlist.

Classe Brano:
Attributi: titolo, artista, durata (in minuti, es. 3.5)

Classe Playlist:
Attributo: brani (lista di oggetti Brano)

Metodi:

aggiungi_brano(brano)

durata_totale() â†’ somma tutte le durate

cerca_per_artista(nome) â†’ stampa tutti i titoli dei brani di quellâ€™artista

Obiettivo: gestione di tuple o oggetti con cicli, somma e filtri.
